This is table12

* Creating the scheduling graph:
There are 14 vertices.
And 23 edges.
0 -> 1 = 0
0 -> 2 = 0
1 -> 3 = 10
1 -> 4 = 10
1 -> 12 = 10
2 -> 3 = 10
2 -> 4 = 10
3 -> 9 = 9
4 -> 5 = 5
4 -> 7 = 5
4 -> 9 = 5
5 -> 6 = 4
5 -> 8 = 4
6 -> 11 = 2
6 -> 12 = 2
7 -> 8 = 2
8 -> 11 = 4
9 -> 8 = 8
9 -> 10 = 8
10 -> 3 = 12
10 -> 11 = 12
11 -> 13 = 2
12 -> 13 = 20

Adjacent Matrix:
     0  1  2  3  4  5  6  7  8  9 10 11 12 13
  0  *  0  0  *  *  *  *  *  *  *  *  *  *  *
  1  *  *  * 10 10  *  *  *  *  *  *  * 10  *
  2  *  *  * 10 10  *  *  *  *  *  *  *  *  *
  3  *  *  *  *  *  *  *  *  *  9  *  *  *  *
  4  *  *  *  *  *  5  *  5  *  5  *  *  *  *
  5  *  *  *  *  *  *  4  *  4  *  *  *  *  *
  6  *  *  *  *  *  *  *  *  *  *  *  2  2  *
  7  *  *  *  *  *  *  *  *  2  *  *  *  *  *
  8  *  *  *  *  *  *  *  *  *  *  *  4  *  *
  9  *  *  *  *  *  *  *  *  8  *  8  *  *  *
 10  *  *  * 12  *  *  *  *  *  *  * 12  *  *
 11  *  *  *  *  *  *  *  *  *  *  *  *  *  2
 12  *  *  *  *  *  *  *  *  *  *  *  *  * 20
 13  *  *  *  *  *  *  *  *  *  *  *  *  *  *

Checking if there are cycles and negative edges...

[[1, 2], [3, 4, 12], [3, 4], [9], [5, 7, 9], [6, 8], [11, 12], [8], [11], [8, 10], [3, 11], [13], [13], []]
Exit points: [13]
Eliminating exit points
Remaining vertices: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
Exit points: [11, 12]
Eliminating exit points
Remaining vertices: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
Exit points: [6, 8]
Eliminating exit points
Remaining vertices: [0, 1, 2, 3, 4, 5, 7, 9, 10]
Exit points: [5, 7]
Eliminating exit points
Remaining vertices: [0, 1, 2, 3, 4, 9, 10]
Exit points: []
Eliminating exit points
Remaining vertices: [0, 1, 2, 3, 4, 9, 10]
-> There is a cycle
This is a cyclic graph, so we won't proceed further. 

What do you want to do next ? 
Do you want to work on another file ? Enter 'yes' or 'no' : Exiting...
